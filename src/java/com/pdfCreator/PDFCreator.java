package com.pdfCreator;

import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.draw.LineSeparator;
import com.model.UserBean;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

public class PDFCreator {

    public void generate(UserBean bean) throws ClassNotFoundException, DocumentException, SQLException, IOException {
        try {
            Document docs = new Document();
            PdfWriter.getInstance(docs, new FileOutputStream("C:/Users/Ched/Desktop/PDF/Sanapls.pdf"));
            docs.open();
            Date currDate = new Date();
            String date = currDate.toString();

            Font headerFont = new Font(Font.FontFamily.HELVETICA, 25, Font.BOLD);
            Font bodyFont = new Font(Font.FontFamily.HELVETICA, 15, Font.NORMAL);
            Font footerFont = new Font(Font.FontFamily.HELVETICA, 10, Font.NORMAL);
            //header part (supposedly)

            ArrayList<String> title = new ArrayList<String>();
            ArrayList<String> genre = new ArrayList<String>();
            ArrayList<String> year = new ArrayList<String>();

            Connection con = bean.getConnect();
            PreparedStatement ps;
            ResultSet rs;

            PdfPTable table = new PdfPTable(3);
            PdfPTable table2 = new PdfPTable(3);
            
            PdfPCell cell1 = new PdfPCell(new Paragraph("TITLE"));
            PdfPCell cell2 = new PdfPCell(new Paragraph("GENRE"));
            PdfPCell cell3 = new PdfPCell(new Paragraph("YEAR"));

            table.addCell(cell1);
            table.addCell(cell2);
            table.addCell(cell3);

            String qry = "SELECT * FROM SONGS";
            ps = con.prepareStatement(qry);
            rs = ps.executeQuery();

            double records = 0;
            while (rs.next()) {
                title.add(rs.getString("TITLE"));
                genre.add(rs.getString("GENRE"));
                year.add(rs.getString("RELEASED"));
                records++;
            }

            for (int i = 0; i <= 15; i++) {
                table.addCell(title.get(i));
                table.addCell(genre.get(i));
                table.addCell(year.get(i));                
            }
            for (int i = 16; i < title.size(); i++) {
                table2.addCell(title.get(i));
                table2.addCell(genre.get(i));
                table2.addCell(year.get(i));
            }
            
            double pages = Math.ceil(records / 16);

            for (int i = 1; i <= pages; i++) {
                docs.add(new Paragraph("Spootify", headerFont));
                LineSeparator ls = new LineSeparator();
                docs.add(new Chunk(ls));
                
                if (i == 1) {
                    docs.add(table);
                }
                if (i == 2) {
                    docs.add(table2);
                }
                //footer - dateStamp, currently logged in user, page 1 of 1 etc.
                docs.add(new Chunk(ls));
                docs.add(new Paragraph(date, footerFont));
                docs.add(new Paragraph("PDF Generated By: " + bean.getName()));
            }
            docs.close();

        } catch (FileNotFoundException ex) {
            Logger.getLogger(PDFCreator.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
